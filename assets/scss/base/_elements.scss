@use 'sass:map';

a {
	color: currentColor;
	text-decoration: underline solid 1px currentColor;
	// text-decoration-thickness: 1px;
	// text-decoration-color: $link;
}

a:hover {
	opacity: var(--link-hover-opacity);
	text-decoration-thickness: 2px;
}

a:visited {
	color: var(--link-color--visited);
}

h1,
h2,
h3,
h4,
h5,
h6 {
	color: var(--heading-color);
	font-weight: map.get($text-weight, 'heading');
	line-height: $line-height;
	margin: map.get($space, 'medium') 0;
}

@each $heading-level in 1 2 3 4 5 6 {
	h#{$heading-level} {
		font-size: map.get($text-size, 'h#{$heading-level}');
	}
}

p {
	line-height: $line-height;
	margin-bottom: map.get($space, 'normal');

	&:last-child {
		margin-bottom: 0;
	}
}

section {
	margin: map.get($space, 'xx-large') 0;

	& > *:not(:last-child) {
		margin-bottom: map.get($space, 'normal');
	}
}

section:first-of-type {
	margin-top: 0;
}

section:last-of-type {
	margin-bottom: 0;
}

img {
	width: 100%;
	height: auto;
}

figure {
	margin: -1 * map.get($space, 'normal');
	width: calc(100% + 2 * map.get($space, 'normal'));
	padding: 1rem;

	img,
	table {
		margin: 0 -1 * map.get($space, 'normal');
		width: calc(100% + 2 * map.get($space, 'normal'));
	}
}

ol, ul {
    margin-block: map.get($space, 'large');

    li {
        margin-left: 3ch;

        &:not(:last-of-type) {
            margin-bottom: map.get($space, 'normal');
        }
    }
}

pre {
    margin-block: map.get($space, 'normal');
    overflow-x: scroll
}